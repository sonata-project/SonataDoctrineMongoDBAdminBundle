{#

This file is part of the Sonata package.

(c) Thomas Rabaix <thomas.rabaix@sonata-project.org>
(c) KÃ©vin Dunglas <dunglas@gmail.com>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.

#}

{% extends 'SonataAdminBundle:Form:form_admin_fields.html.twig' %}


{# Custom Sonata Admin Extension #}
{% block sonata_admin_mongo_one_widget %}
    {% include 'SonataDoctrineMongoDBAdminBundle:CRUD:edit_mongo_one.html.twig' %}
{% endblock %}

{% block sonata_admin_mongo_many_widget %}
    {% include 'SonataDoctrineMongoDBAdminBundle:CRUD:edit_mongo_many.html.twig' %}
{% endblock %}

{% block sonata_admin_mongo_collection %}
    {% include 'SonataDoctrineMongoDBAdminBundle:CRUD:edit_mongo_collection.html.twig' %}
{% endblock %}

{% block sonata_type_model_widget %}
    {#
        This is not the best way to do if
        TODO : improve this part
    #}

    {#model {{ sonata_admin.field_description.mappingtype }}#}

    {% if sonata_admin.field_description is empty %}
        {{ block('choice_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == constant('Doctrine\\ODM\\MongoDB\\Mapping\\ClassMetadataInfo::ONE') %}
        {{ block('sonata_admin_mongo_one_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == constant('Doctrine\\ODM\\MongoDB\\Mapping\\ClassMetadataInfo::MANY')  %}
        {{ block('sonata_admin_mongo_many_widget') }}
    {% else %}
        {#INVALID MODE : {{ id }}#}
        {{ block('choice_widget') }}
    {% endif %}
{% endblock %}

{% block sonata_type_model_list_widget %}
    <div id="field_container_{{ id }}" class="field-container">
        <span id="field_widget_{{ id }}" class="field-short-description">
            {% if sonata_admin.field_description.associationadmin.id(sonata_admin.value) %}
                {% render path('sonata_admin_short_object_information', {
                'code':     sonata_admin.field_description.associationadmin.code,
                'objectId': sonata_admin.field_description.associationadmin.id(sonata_admin.value),
                'uniqid':   sonata_admin.field_description.associationadmin.uniqid,
                'linkParameters': sonata_admin.field_description.options.link_parameters
                }) %}
            {% elseif sonata_admin.field_description.options.placeholder is defined and sonata_admin.field_description.options.placeholder %}
                <span class="inner-field-short-description">
                    {{ sonata_admin.field_description.options.placeholder|trans({}, 'SonataAdminBundle') }}
                </span>
            {% endif %}
        </span>
        <span id="field_actions_{{ id }}" class="field-actions">
            <span class="btn-group">
                {% if sonata_admin.field_description.associationadmin.hasroute('list') and sonata_admin.field_description.associationadmin.isGranted('LIST') and btn_list %}
                    <a  href="{{ sonata_admin.field_description.associationadmin.generateUrl('list') }}"
                        onclick="return start_field_dialog_form_list_{{ id }}(this);"
                        class="btn btn-info btn-sm sonata-ba-action"
                        title="{{ btn_list|trans({}, btn_catalogue) }}"
                            >
                        <i class="fa fa-list"></i>
                        {{ btn_list|trans({}, btn_catalogue) }}
                    </a>
                {% endif %}

                {% if sonata_admin.field_description.associationadmin.hasroute('create') and sonata_admin.field_description.associationadmin.isGranted('CREATE') and btn_add %}
                    <a  href="{{ sonata_admin.field_description.associationadmin.generateUrl('create') }}"
                        onclick="return start_field_dialog_form_add_{{ id }}(this);"
                        class="btn btn-success btn-sm sonata-ba-action"
                        title="{{ btn_add|trans({}, btn_catalogue) }}"
                            >
                        <i class="fa fa-plus-circle"></i>
                        {{ btn_add|trans({}, btn_catalogue) }}
                    </a>
                {% endif %}
            </span>

            <span class="btn-group">
                {% if sonata_admin.field_description.associationadmin.hasRoute('delete') and sonata_admin.field_description.associationadmin.isGranted('DELETE') and btn_delete %}
                    <a  href=""
                        onclick="return remove_selected_element_{{ id }}(this);"
                        class="btn btn-danger btn-sm sonata-ba-action"
                        title="{{ btn_delete|trans({}, btn_catalogue) }}"
                            >
                        <i class="fa fa-minus-circle"></i>
                        {{ btn_delete|trans({}, btn_catalogue) }}
                    </a>
                {% endif %}
            </span>
        </span>

        <span style="display: none" >
            {# Hidden text input cannot be required, because browser will throw error "An invalid form control with name='' is not focusable"  #}
            {{ form_widget(form, {'required':false}) }}
        </span>

        {{ block('sonata_help') }}

        <div class="modal fade" id="field_dialog_{{ id }}" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title"></h4>
                    </div>
                    <div class="modal-body">
                    </div>
                </div>
            </div>
        </div>
    </div>

    {% include 'SonataDoctrineMongoDBAdminBundle:CRUD:edit_mongo_association_script.html.twig' %}
{% endblock %}

{% block sonata_type_admin_widget %}
    {#admin {{ sonata_admin.field_description.mappingtype }}#}
    {% if sonata_admin.field_description.mappingtype == constant('Doctrine\\ODM\\MongoDB\\Mapping\\ClassMetadataInfo::ONE') %}
        {{ block('sonata_admin_mongo_one_widget') }}
    {% elseif sonata_admin.field_description.mappingtype == constant('Doctrine\\ODM\\MongoDB\\Mapping\\ClassMetadataInfo::MANY') %}
        {{ block('sonata_admin_mongo_many_widget') }}
    {% else %}
        INVALID MODE : {{ id }}
    {% endif %}
{% endblock %}

{% block sonata_type_collection_widget %}
    {% if sonata_admin.field_description.mappingtype == constant('Doctrine\\ODM\\MongoDB\\Mapping\\ClassMetadataInfo::MANY') %}
        {{ block('sonata_admin_mongo_collection') }}
    {% else %}
        INVALID MODE : {{ id }} - type : sonata_type_collection - mapping : {{ sonata_admin.field_description.mappingtype }}
    {% endif %}
{% endblock %}
